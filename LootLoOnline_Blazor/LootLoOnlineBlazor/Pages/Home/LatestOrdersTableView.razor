@inject VisitedUserRepository visitedUserRepo
@inject IHttpContextAccessor httpContextAccessor
@implements IDisposable

<div class="card">
    <div class="card-header border-transparent">
        <h3 class="card-title">Most Viewed Offers</h3>

        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    <!-- /.card-header -->
    <div class="card-body p-0">
        <div class="table-responsive">
            <table id="LatestOrdersTable" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Shop Now</th>
                        <th>Title</th>
                        <th>Status</th>
                        <th>Views</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in latestOrders)
                    {
                        <tr>
                            <td><a href="@(item.ProductUrl)" class="btn btn-sm btn-outline-info">Shop Now</a></td>
                            <td>
                                <div class="product-img">
                                    <!--!-->
                                    <img src="@item.ImageUrl" alt="@item.OfferName" class="img-size-50"><!--!-->
                                </div>
                                <div class="product-info">
                                    <!--!-->
                                    <a href="@item.ProductUrl" target="_blank" class="product-title">
                                        <!--!-->
                                        @item.OfferTitle

                                    </a><!--!-->

                                </div>

                            </td>
                            <td><span class="badge badge-success">LIVE</span></td>
                            <td>
                                @if ((DateTime.UtcNow - item.CreatedDate.Value).Days < 2)
                                {<i class="fas fa-arrow-up text-sm"></i>
                                }
                                else
                                {
                                    <i class="fas fa-arrow-down text-sm"></i>
                                }
                                @(item.Count)
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
        <!-- /.table-responsive -->
    </div>
    <!-- /.card-body -->
    @*<div class="card-footer clearfix">
            <a href="javascript:void(0)" class="btn btn-sm btn-info float-left">Place New Order</a>
            <a href="javascript:void(0)" class="btn btn-sm btn-secondary float-right">View All Orders</a>
        </div>*@
    <!-- /.card-footer -->
</div>

@code {

    // [Parameter]
    // public IReadOnlyList<Visitor> latestOrders { get; set; }

    public IList<VisitedUser> latestOrders { get; set; }


    protected override async Task OnInitializedAsync()
    {
        string IpAddress = httpContextAccessor.HttpContext.Connection?.RemoteIpAddress.ToString();

        latestOrders = await visitedUserRepo.GetAllByFilter(1, 100, null, m => m.CreatedDate);
    }

    public void Dispose()
    {

    }
}
