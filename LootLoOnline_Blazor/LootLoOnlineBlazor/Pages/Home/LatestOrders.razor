@inject VisitedUserRepository visitedUserRepo
@inject IHttpContextAccessor httpContextAccessor
@implements IDisposable

<div class="card">
    <div class="card-header border-transparent">
        <h3 class="card-title">Most Viewed Offers</h3>

        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    <!-- /.card-header -->
    <div class="card-body p-0">
        @*<div class="card-body table-responsive p-0">
            <table id="LatestOrdersTable"  class="table table-striped table-valign-middle">
                <thead>
                    <tr>
                        <th></th>
                        <th>Title</th>
                        <th>View Count</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (latestOrders != null && latestOrders.Count > 0)
                    {
                        foreach (var offer in latestOrders)
                        {
                            <tr>
                                <td>
                                    <img src="@(offer.ImageUrl)" alt="@(offer.OfferTitle)" class="img-circle img-size-32 mr-2">

                                </td>
                                <td>@(offer.OfferTitle)</td>
                                <td>
                                    @if ((DateTime.UtcNow - offer.CreatedDate.Value).Days < 2)
                                    {<small class="text-success mr-1">
                                            <i class="fas fa-arrow-up"></i>
                                            @(offer.Count)
                                        </small>
                                    }
                                    else
                                    {
                                        <small class="text-danger mr-1">
                                            <i class="fas fa-arrow-down text-sm"></i>
                                            @(offer.Count)
                                        </small>

                                    }
                                </td>
                                <td>
                                    <a href="@(offer.ProductUrl)" target="_blank" class="text-muted">
                                        Buy Now
                                    </a>
                                </td>
                            </tr>
                        }
                    }


                </tbody>
            </table>
        </div>*@
        <ul class="products-list product-list-in-card pl-2 pr-2">
                @if (latestOrders != null && latestOrders.Count > 0)
                {
                    foreach (var offer in latestOrders)
                    {
                        <li class="item">
                            <div class="product-img">
                                <img src="@(offer.ImageUrl)" alt="@(offer.OfferTitle)" class="img-size-50">
                            </div>
                            <div class="product-info">
                                <a href="@(offer.ProductUrl)" target="_blank" class="product-title">
                                    @(offer.OfferTitle)
                                    <span class="badge badge-success float-right">
                                        @if ((DateTime.UtcNow - offer.CreatedDate.Value).Days < 2)
                                        {<i class="fas fa-arrow-up text-sm"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-arrow-down text-sm"></i>
                                        }
                                        @(offer.Count)
                                    </span>
                                </a>
                                <span class="product-description">
                                    @(offer.OfferName)
                                </span>
                            </div>
                        </li>
                    }
                }
            </ul>
    </div>
    <!-- /.card-body -->
    <div class="card-footer text-center">
        <a href="/alloffers" class="uppercase">View More</a>
    </div>
    <!-- /.card-footer -->
</div>

@code {

        // [Parameter]
        // public IReadOnlyList<Visitor> latestOrders { get; set; }

        public IList<VisitedUser> latestOrders { get; set; }


        protected override async Task OnInitializedAsync()
    //{
        string IpAddress = httpContextAccessor.HttpContext.Connection?.RemoteIpAddress.ToString();

        latestOrders = await visitedUserRepo.GetAllByFilter(1, 5, null, m => m.CreatedDate);
    }

    public void Dispose()
    {

    }
}
