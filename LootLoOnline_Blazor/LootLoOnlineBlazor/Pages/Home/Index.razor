@page "/"
@page "/{name}"
@inject AppStateService appState
@inject FlipkartOfferAdapter OfferAdapter
@inject MongodbVisitorService visitorService
@implements IDisposable
@inject IJSRuntime JSRuntime

<ContentHeader ContentList="lstContent"></ContentHeader>
<div class="content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-md-4">
                @*@if (dealsOfTheDayModel != null)
                    {
                        <OfferDetails dealsOfTheDayModel="dealsOfTheDayModel" />
                    }*@
                @*else if (latestOrders != null)
                    {
                        <LatestOrders latestOrders="latestOrders" />
                    }*@

                <LatestOrders></LatestOrders>
            </div>
            <div class="col-md-4">
                <LatestDealsOfTheDay></LatestDealsOfTheDay>
            </div>
            <div class="col-md-4">
                <RecentlyAddedProducts />
                @*@if (recentlyAddedDeals != null)
                {

                    <RecentlyAddedProducts recentlyAddedDeals="recentlyAddedDeals" />
                }*@
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <!-- Default box -->
                <div class="card">
                    <div class="card-body">
                        <div class="input-group input-group-sm">
                            <SearchByTitle OnSearchChanged="SearchByTitle" />
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col-md-6 -->
            <Deals dealsOfTheDayList="dealsOfTheDayList" />
            <!-- /.col-md-6 -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</div>

@code {

    [Parameter]
    public string name { get; set; }
    public DealsOfTheDayModel dealsOfTheDayModel { get; set; }

    List<string> lstContent = new List<string> { "Welcome to LootLo Online." };
    private List<DealsOfTheDayModel> dealsOfTheDayList { get; set; }
    private static List<DealsOfTheDayModel> readonlyDealsOfTheDayList { get; set; }
    // private static List<Visitor> latestOrders { get; set; }
    private List<DealsOfTheDayModel> recentlyAddedDeals { get; set; }


    protected override async Task OnInitializedAsync()
    {

        name = name ?? "";
        dealsOfTheDayList = await OfferAdapter.GetAllOffers();
        readonlyDealsOfTheDayList = dealsOfTheDayList;
        appState.SetdealsOfTheDay(dealsOfTheDayList);


        //  latestOrders = visitorService.visitorRepository.GetAll().OrderByDescending(x => x.CreatedDate).ToList();
        //  recentlyAddedDeals = readonlyDealsOfTheDayList.OrderByDescending(x => x.endTime.UnixTimeToDateTime()).Take(5).ToList();

        if (!string.IsNullOrEmpty(name))
        {
            name = name.Replace('{', ' ').Replace('}', ' ').Trim();
            dealsOfTheDayModel = dealsOfTheDayList.Where(x => x.name.Contains(name)).FirstOrDefault();

            appState.SetPageTitle(name);
            appState.SetMetaTitle(name);
            appState.SetMetaDescription("LootLo Online - " + name + "-" + dealsOfTheDayModel.title);
        }
        else
        {
            appState.SetPageTitle("Welcome to");
            appState.SetMetaTitle("Welcome  to LootLo Online.");
            appState.SetMetaDescription("LootLo Online is a deals Site");
        }
    }
    private async Task SearchByTitle(string searchTerm)
    {
        if (!string.IsNullOrEmpty(searchTerm))
        {
            dealsOfTheDayList = readonlyDealsOfTheDayList.Where(x => x.title.Contains(searchTerm) || x.name.Contains(searchTerm)).ToList();
        }
        else
        {
            dealsOfTheDayList = readonlyDealsOfTheDayList.ToList();
        }

    }
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            return JSRuntime.InvokeVoidAsync("Functions.init").AsTask();
        }

        return Task.CompletedTask;
    }
    public void Dispose()
    {

    }
}


