@page "/"
@inject FlipkartService _flipkartService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<div class="row">
    @if (flipkartAllOffers == null)
    {
        <p><em>No record found.</em></p>
    }
    else
    {
        foreach (var offer in flipkartAllOffers.allOffersList)
        {
            <div class="col-md-3">
                <div class="card mb-4 box-shadow">
                    <img class="card-img-top" loading="lazy" alt="@offer.title" style="height: 225px; width: 100%; display: block;" src="@offer.imageUrls.First().url" data-holder-rendered="true">
                    <div class="card-body">
                        <p class="card-text">@(offer.name + offer.title)</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-outline-secondary">Shop Now</button>

                            </div>
                            <small class="text-muted">@(offer.endTime.UnixTimeToDateTime().Result)</small>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

</div>

@code{

    int recordParpage = 100;
    private FlipkartAllOffers flipkartAllOffers;

    protected override async Task OnInitializedAsync()
    {
        flipkartAllOffers = await _flipkartService.ProcessAllOffers();

    }
}


