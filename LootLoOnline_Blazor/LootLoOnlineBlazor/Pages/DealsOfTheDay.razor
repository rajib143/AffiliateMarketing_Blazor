@page "/dealsoftheday"
@inject FlipkartOfferAdapter OfferAdapter
@implements IDisposable

<ContentHeader ContentList="lstContent"></ContentHeader>

<div class="container-fluid">
    
    <div class="row">
        <!-- /.col-md-6 -->
        @if (dealsOfTheDayList == null || dealsOfTheDayList.Count == 0)
        {
            <h1>Loading...</h1>
        }
        else
        {
            foreach (var offer in dealsOfTheDayList)
            {
                <div class="col-md-2">
                    <div class="card">
                        <div class="text-center">
                            <a href="@offer.url" target="_blank"><img class="card-img-top img-fluid img-thumbnail lazy_load" style="max-width: fit-content; max-height: fit-content;" loading="lazy" alt="@(offer.name + offer.title)" src="@offer.imageUrl" data-holder-rendered="true"></a>
                        </div>
                        <div class="card-body">
                            <p class="card-text small">@(offer.name + offer.title)</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a href="@offer.url" target="_blank" alt="@(offer.name + offer.title)" class="btn btn-sm btn-outline-secondary">Shop Now</a>
                                </div>
                                <small class="text-muted">@(offer.endTime.UnixTimeToDateTime())</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        <!-- /.col-md-6 -->
    </div>
    <!-- /.row -->
</div>


@code {
    List<string> lstContent = new List<string> { "Deals of the day" };
    protected List<DealsOfTheDayModel> dealsOfTheDayList;

    protected override async Task OnInitializedAsync()
    {
        dealsOfTheDayList = await OfferAdapter.GetDealsOfTheDay();
    }
 
    public void Dispose()
    {

    }
}
