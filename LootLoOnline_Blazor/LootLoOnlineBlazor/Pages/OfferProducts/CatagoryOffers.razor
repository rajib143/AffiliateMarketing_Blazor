@page "/catagoryoffers"
@inject AppStateService appState
@inject FlipkartOfferAdapter OfferAdapter
@inject OfferProductRepository offerProductRepo
@inject LogsRepository _logRepo
@inject IJSRuntime JSRuntime
@implements IDisposable

<ContentHeader ContentList="lstContent"></ContentHeader>

<div class="content">
    @*<div class="row">
            <div class="col-lg-6">

                <div class="card">
                    <div class="card-header border-0">
                        <h3 class="card-title">Products</h3>
                        <div class="card-tools">
                            <a href="#" class="btn btn-tool btn-sm">
                                <i class="fas fa-download"></i>
                            </a>
                            <a href="#" class="btn btn-tool btn-sm">
                                <i class="fas fa-bars"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body table-responsive p-0">
                        <table class="table table-striped table-valign-middle">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Sales</th>
                                    <th>More</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                        Some Product
                                    </td>
                                    <td>$13 USD</td>
                                    <td>
                                        <small class="text-success mr-1">
                                            <i class="fas fa-arrow-up"></i>
                                            12%
                                        </small>
                                        12,000 Sold
                                    </td>
                                    <td>
                                        <a href="#" class="text-muted">
                                            <i class="fas fa-search"></i>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                        Another Product
                                    </td>
                                    <td>$29 USD</td>
                                    <td>
                                        <small class="text-warning mr-1">
                                            <i class="fas fa-arrow-down"></i>
                                            0.5%
                                        </small>
                                        123,234 Sold
                                    </td>
                                    <td>
                                        <a href="#" class="text-muted">
                                            <i class="fas fa-search"></i>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                        Amazing Product
                                    </td>
                                    <td>$1,230 USD</td>
                                    <td>
                                        <small class="text-danger mr-1">
                                            <i class="fas fa-arrow-down"></i>
                                            3%
                                        </small>
                                        198 Sold
                                    </td>
                                    <td>
                                        <a href="#" class="text-muted">
                                            <i class="fas fa-search"></i>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <img src="dist/img/default-150x150.png" alt="Product 1" class="img-circle img-size-32 mr-2">
                                        Perfect Item
                                        <span class="badge bg-danger">NEW</span>
                                    </td>
                                    <td>$199 USD</td>
                                    <td>
                                        <small class="text-success mr-1">
                                            <i class="fas fa-arrow-up"></i>
                                            63%
                                        </small>
                                        87 Sold
                                    </td>
                                    <td>
                                        <a href="#" class="text-muted">
                                            <i class="fas fa-search"></i>
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>

            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header border-0">
                        <h3 class="card-title">Online Store Overview</h3>
                        <div class="card-tools">
                            <a href="#" class="btn btn-sm btn-tool">
                                <i class="fas fa-download"></i>
                            </a>
                            <a href="#" class="btn btn-sm btn-tool">
                                <i class="fas fa-bars"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center border-bottom mb-3">
                            <p class="text-success text-xl">
                                <i class="ion ion-ios-refresh-empty"></i>
                            </p>
                            <p class="d-flex flex-column text-right">
                                <span class="font-weight-bold">
                                    <i class="ion ion-android-arrow-up text-success"></i> 12%
                                </span>
                                <span class="text-muted">CONVERSION RATE</span>
                            </p>
                        </div>

                        <div class="d-flex justify-content-between align-items-center border-bottom mb-3">
                            <p class="text-warning text-xl">
                                <i class="ion ion-ios-cart-outline"></i>
                            </p>
                            <p class="d-flex flex-column text-right">
                                <span class="font-weight-bold">
                                    <i class="ion ion-android-arrow-up text-warning"></i> 0.8%
                                </span>
                                <span class="text-muted">SALES RATE</span>
                            </p>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-0">
                            <p class="text-danger text-xl">
                                <i class="ion ion-ios-people-outline"></i>
                            </p>
                            <p class="d-flex flex-column text-right">
                                <span class="font-weight-bold">
                                    <i class="ion ion-android-arrow-down text-danger"></i> 1%
                                </span>
                                <span class="text-muted">REGISTRATION RATE</span>
                            </p>
                        </div>

                    </div>
                </div>
            </div>

        </div>*@

    <div class="row">
        <div class="col-12">
            <!-- Default box -->
            <div class="card">
                <div class="card-body">
                    <div class="input-group input-group-sm">
                        <SearchByTitle OnSearchChanged="SearchByTitle" />
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col-md-6 -->
        <Products lootLoOfferProducts="@lootLoOfferProducts" />
        <!-- /.col-md-6 -->
    </div>
    @*<div class="container-fluid">
            <div class="row">
                <Search OnSelect="OnSelectionChange"></Search>
                <p>@caragoryOfferAPI</p>
            </div>
            @if (!string.IsNullOrWhiteSpace(caragoryOfferAPI))
            {
                <div class="row">
                    <OfferProducts caragoryOfferAPI="@caragoryOfferAPI" />
                </div>
            }

        </div>*@
    <!-- /.container-fluid -->
</div>

@code {
    List<string> lstContent = new List<string> { "Catagory By Offers" };

    public List<OfferProductViewModel> lootLoOfferProducts { get; set; }
    private static List<OfferProductViewModel> readonlylootLoOfferProducts { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var offerProducts = await offerProductRepo.GetAllByFilter(1, 100, x => x.shippingCharges == 0 && (x.categoryPath.Contains("Mobiles") || x.categoryPath.Contains("Electronics"))
        && x.SellingPrice>5000 && x.SellingPrice<50000, m => (m.discountPercentage));
        lootLoOfferProducts = offerProducts.Select(x => new OfferProductViewModel()
        {
            productId = x.productId,
            title = x.title,
            shotTitle = x.shotTitle,
            codAvailable = x.codAvailable,
            CreatedDate = x.CreatedDate,
            currency = x.currency,
            discountPercentage = x.discountPercentage,
            imageUrls_200 = x.imageUrls_200,
            imageUrls_400 = x.imageUrls_400,
            imageUrls_800 = x.imageUrls_800,
            inStock = x.inStock,
            offers = x.offers,
            productUrl = x.productUrl,
            SellingPrice = x.SellingPrice,
            SiteName = x.SiteName,
            SpecialPrice = x.SpecialPrice,
            validTill = x.validTill,
            CategoryId = x.CategoryId,
            CategoryPath = x.categoryPath


        }).ToList();

        readonlylootLoOfferProducts = lootLoOfferProducts;

        //lootLoOfferProducts = await flipkartOfferProduct.GetSerchOfferProducts(x => x.OfferProduct.SiteName == "Flipkart");
        //readonlylootLoOfferProducts = lootLoOfferProducts;
        // appStateService.OnChange += StateHasChanged;
        appState.SetPageTitle("Offers By Catagory");
        appState.SetMetaTitle("LootLo Online: Offers By Catagory");
        appState.SetMetaDescription("LootLo Online: Offers By Catagory");
    }

    private async Task SearchByTitle(string searchTerm)
    {
        if (!string.IsNullOrEmpty(searchTerm))
        {
            // lootLoOfferProducts = readonlylootLoOfferProducts.Where(x => x.discountPercentage.ToString().Contains(searchTerm)|| x.shotTitle.Contains(searchTerm)).ToList();

            var offerProducts = offerProductRepo.GetAllByFilter(1, 100, 
                x => x.shotTitle.Contains(searchTerm) 
                || x.title.Contains(searchTerm)
                || x.categoryPath.Contains(searchTerm)
                || x.attributes.Contains(searchTerm)
                || x.offers.Contains(searchTerm)
                || x.productBrand.Contains(searchTerm)
                || x.keySpecs.Contains(searchTerm)
                || x.sellerName.Contains(searchTerm)
                || x.detailedSpecs.Contains(searchTerm)
                || x.specificationList.Contains(searchTerm)
            , m => m.validTill);
            lootLoOfferProducts = offerProducts.Result.Select(x => new OfferProductViewModel()
            {
                productId = x.productId,
                title = x.title,
                shotTitle = x.shotTitle,
                codAvailable = x.codAvailable,
                CreatedDate = x.CreatedDate,
                currency = x.currency,
                discountPercentage = x.discountPercentage,
                imageUrls_200 = x.imageUrls_200,
                imageUrls_400 = x.imageUrls_400,
                imageUrls_800 = x.imageUrls_800,
                inStock = x.inStock,
                offers = x.offers,
                productUrl = x.productUrl,
                SellingPrice = x.SellingPrice,
                SiteName = x.SiteName,
                SpecialPrice = x.SpecialPrice,
                validTill = x.validTill,
                CategoryId = x.CategoryId,
                CategoryPath = x.categoryPath

            }).ToList();

            readonlylootLoOfferProducts = lootLoOfferProducts;
        }
        else
        {
            lootLoOfferProducts = readonlylootLoOfferProducts.ToList();
        }

    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            return JSRuntime.InvokeVoidAsync("Functions.init").AsTask();
        }

        return Task.CompletedTask;
    }
    //async Task OnSelectionChange(OfferCatagory data)
    //{
    //    caragoryOfferAPI = data.getApi;
    //    if (!string.IsNullOrWhiteSpace(caragoryOfferAPI))
    //    {
    //        flipkartProducts = await OfferAdapter.GetOfferProducts("", caragoryOfferAPI);
    //    }
    //}

    public void Dispose()
    {
        // appStateService.OnChange -= StateHasChanged;
    }
}
