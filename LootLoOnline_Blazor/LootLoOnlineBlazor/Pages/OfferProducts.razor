@page "/offerproducts"
@inject FlipkartOfferAdapter flipkartOfferAdapter
@inject OfferProductRepo offerProductRepo
@implements IDisposable


@if (flipkartProducts == null)
{
    <h1>Loading...</h1>
}
else
{
    foreach (var offer in flipkartProducts.products)
    {
        <div class="col-md-2">
            <div class="card">
                <div class="text-center">
                    <a href="@offer.productBaseInfoV1.productUrl" target="_blank"><img class="card-img-top img-fluid img-thumbnail lazy_load" style="max-width: fit-content; max-height: fit-content;" loading="lazy" alt="@offer.productBaseInfoV1.title" src="@offer.productBaseInfoV1.imageUrls["200x200"]" data-holder-rendered="true"></a>
                </div>
                <div class="card-body">
                    <p class="card-text small">@(offer.productBaseInfoV1.title)</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            <a href="@offer.productBaseInfoV1.productUrl" target="_blank" alt="@(offer.productBaseInfoV1.title)" class="btn btn-sm btn-outline-secondary">Shop Now</a>
                        </div>
                        @*<span class="cut-price">
                                <i class="lo-icons">&#xe905;</i> @(@offer.productBaseInfoV1.flipkartSellingPrice.currency+" "+offer.productBaseInfoV1.flipkartSellingPrice.amount)
                            </span>
                            <i class="lo-icons">&#xe905;</i> @(@offer.productBaseInfoV1.flipkartSpecialPrice.currency+" "+offer.productBaseInfoV1.flipkartSpecialPrice.amount)*@
                        <small class="text-muted">@(offer.productBaseInfoV1.flipkartSpecialPrice.currency+" "+offer.productBaseInfoV1.flipkartSpecialPrice.amount)</small>
                    </div>
                </div>

            </div>
        </div>

    }
}

@code {
    protected FlipkartProducts flipkartProducts;
    [Parameter] public string caragoryOfferAPI{get; set;}

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(caragoryOfferAPI))
        { 
            flipkartProducts = await flipkartOfferAdapter.GetOfferProducts("", caragoryOfferAPI); 
        }
        // appStateService.OnChange += StateHasChanged;
        //flipkartProducts = appStateService.flipkartOfferProducts.Where(x => x.productCatagory.resourceName == appStateService.SelectedCatagory.Name).FirstOrDefault(); //await flipkartOfferAdapter.GetOfferProducts(appStateService.SelectedCatagory.Name, appStateService.SelectedCatagory.getApi);
    }
    public void Dispose()
    {
       // appStateService.OnChange -= StateHasChanged;
    }
}
